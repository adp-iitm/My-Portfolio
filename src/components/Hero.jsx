import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { ChevronDown, Github, Linkedin, Mail, Volume2 } from 'lucide-react';
import profileImage from '../assets/profile.jpg';

const Hero = ({ darkMode }) => {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.25,
        staggerChildren: 0.12,
      },
    },
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
    },
  };

  // Multilingual name ticker just below the main name (expanded)
  const nameTranslations = [
    { lang: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', text: '‡§Ü‡§¶‡§ø‡§§‡•ç‡§Ø' },
    { lang: '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç', text: '‡ÆÜ‡Æ§‡Æø‡Æ§‡Øç‡ÆØ‡Ææ' },
    { lang: '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', text: '‡∞Ü‡∞¶‡∞ø‡∞§‡•ç‡§Ø' },
    { lang: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ', text: '‡§Ü‡§¶‡§ø‡§§‡ßç‡¶Ø' },
    { lang: '‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä', text: '‡™Ü‡™¶‡™ø‡™§‡´ç‡™Ø' },
    { lang: '‡≤ï‡≤®‡≥ç‡≤®‡≤°', text: '‡≤Ü‡≤¶‡≤ø‡≤§‡≥ç‡≤Ø' },
    { lang: '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç', text: '‡¥Ü‡¥¶‡¥ø‡¥§‡µç‡¥Ø' },
    { lang: '‡§Æ‡§∞‡§æ‡§†‡•Ä', text: '‡§Ü‡§¶‡§ø‡§§‡•ç‡§Ø' },
    { lang: '‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä', text: '‡®Ü‡®¶‡®ø‡®§‡©ç‡®Ø' },
    { lang: 'ÿßÿ±ÿØŸà', text: 'ÿ¢ÿØÿ™€å€Å' },
    { lang: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', text: 'ÿ£ÿØŸäÿ™Ÿäÿß' },
    { lang: '‰∏≠Êñá', text: 'ÈòøËø™Êèê‰∫ö' },
    { lang: 'Êó•Êú¨Ë™û', text: '„Ç¢„Éá„Ç£„ÉÜ„Ç£„É§' },
    { lang: 'ÌïúÍµ≠Ïñ¥', text: 'ÏïÑÎîîÌã∞Ïïº' },
    { lang: '–†—É—Å—Å–∫–∏–π', text: '–ê–¥–∏—Ç—å—è' },
    { lang: '‡πÑ‡∏ó‡∏¢', text: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡∏∞' },
    { lang: 'T√ºrk√ße', text: 'Aditya' },
    { lang: 'ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨', text: 'ŒëŒΩœÑŒØœÑŒπŒ±' },
    { lang: 'Ti·∫øng Vi·ªát', text: 'Aditya' },
    { lang: '◊¢◊ë◊®◊ô◊™', text: '◊ê◊ì◊ô◊ò◊ô◊î' },
    { lang: '‡§®‡•á‡§™‡§æ‡§≤‡•Ä', text: '‡§Ö‡§¶‡§ø‡§§‡•ç‡§Ø' },
    { lang: '‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω', text: '‡∂Ü‡∂Ø‡∑í‡∂≠‡∑ä‚Äç‡∂∫' },
    { lang: '·Äô·Äº·Äî·Ä∫·Äô·Ä¨', text: '·Ä°·Äí·ÄÆ·Äê·Äõ·Ä¨' },
    { lang: 'Indonesian', text: 'Aditya' },
    { lang: 'Portugu√™s', text: 'Aditya' },
    { lang: 'Polski', text: 'Aditya' },
    { lang: 'Nederlands', text: 'Aditya' },
  ];
  const [nameIdx, setNameIdx] = useState(0);

  // Linger longer when Hindi is shown
  useEffect(() => {
    const current = nameTranslations[nameIdx];
    const delay = current.lang === '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä' ? 3000 : 1800;
    const t = setTimeout(() => {
      setNameIdx((prev) => (prev + 1) % nameTranslations.length);
    }, delay);
    return () => clearTimeout(t);
  }, [nameIdx]);

  const scrollToAbout = () => {
    const element = document.querySelector('#about');
    if (element) {
      const headerOffset = 72;
      const rect = element.getBoundingClientRect();
      const targetY = window.pageYOffset + rect.top - headerOffset;
      window.scrollTo({ top: targetY, behavior: 'smooth' });
    }
  };

  const playGreetingEn = () => {
    try {
      const synth = window.speechSynthesis;
      if (!synth) return;
      const text = "Hello! Welcome to my portfolio. I‚Äôm Aditya, a Machine Learning Engineer passionate about building intelligent systems. Let‚Äôs dive into the future of AI and explore my work!";
      const enUtter = new SpeechSynthesisUtterance(text);
      enUtter.lang = 'en-IN';
      enUtter.rate = 1.02;
      enUtter.pitch = 1.0;
      synth.cancel();
      synth.speak(enUtter);
    } catch {}
  };

  const playGreetingHi = () => {
    try {
      const synth = window.speechSynthesis;
      if (!synth) return;
      const text = '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•á‡§∞‡•á ‡§™‡•ã‡§∞‡•ç‡§ü‡§´‡•ã‡§≤‡§ø‡§Ø‡•ã ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§¶‡§ø‡§§‡•ç‡§Ø ‡§π‡•Ç‡§Å, ‡§è‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞‡•§ ‡§Æ‡•Å‡§ù‡•á ‡§ñ‡•Å‡§∂‡•Ä ‡§π‡•à ‡§ï‡§ø ‡§Ü‡§™ ‡§Ø‡§π‡§æ‡§Å ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§á‡§è ‡§Æ‡•á‡§∞‡•á ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü‡•ç‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç ‡§î‡§∞ AI ‡§ï‡•Ä ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§æ‡§• ‡§ï‡§¶‡§Æ ‡§∞‡§ñ‡•á‡§Ç!';
      const hiUtter = new SpeechSynthesisUtterance(text);
      hiUtter.lang = 'hi-IN';
      hiUtter.rate = 1.02;
      hiUtter.pitch = 1.0;
      synth.cancel();
      synth.speak(hiUtter);
    } catch {}
  };

  return (
    <section id="home" className="min-h-screen flex items-center justify-center relative overflow-hidden">
      {/* Background Pattern */}
      <div className="absolute inset-0 opacity-5">
        <div className="absolute inset-0 bg-gradient-to-br from-primary-600 to-purple-600"></div>
      </div>

      {/* Animated accent blobs */}
      <motion.div
        aria-hidden
        className="pointer-events-none absolute -top-24 -left-24 w-64 h-64 rounded-full bg-gradient-to-tr from-amber-500/20 to-indigo-600/20"
        animate={{ x: [0, 20, 0], y: [0, 10, 0], scale: [1, 1.05, 1] }}
        transition={{ duration: 10, repeat: Infinity, ease: 'easeInOut' }}
      />
      <motion.div
        aria-hidden
        className="pointer-events-none absolute -bottom-24 -right-24 w-72 h-72 rounded-full bg-gradient-to-tr from-fuchsia-500/20 to-emerald-500/20"
        animate={{ x: [0, -20, 0], y: [0, -10, 0], scale: [1, 1.06, 1] }}
        transition={{ duration: 12, repeat: Infinity, ease: 'easeInOut' }}
      />

      <div className="container-max section-padding relative z-10">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate="visible"
          className="text-center"
        >
          <motion.div
            variants={itemVariants}
            className="mb-6"
          >
            <motion.div
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ delay: 0.5, type: "spring", stiffness: 200 }}
            >
              <img
                src={profileImage}
                alt="Profile"
                className="w-33 h-32 mx-auto mb-8 rounded-full object-cover border-4 border-primary-600"
              />
            </motion.div>

          </motion.div>

          <motion.h1
            variants={itemVariants}
            className="text-4xl md:text-6xl lg:text-7xl font-bold mb-2"
          >
            <motion.span
              initial={{ backgroundPosition: '0% 50%' }}
              animate={{ backgroundPosition: ['0% 50%', '100% 50%', '0% 50%'] }}
              transition={{ duration: 8, repeat: Infinity, ease: 'linear' }}
              className="gradient-text bg-[length:200%_200%]"
            >
              Aditya Pareek
            </motion.span>
          </motion.h1>

          {/* Rotating multilingual name just below main name */}
          <motion.div
            key={nameIdx}
            initial={{ opacity: 0, y: 6 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.35 }}
            className={`text-lg md:text-2xl mb-4 font-medium ${
              darkMode ? 'text-gray-300' : 'text-gray-700'
            }`}
          >
            {nameTranslations[nameIdx].text}
            <span className={`ml-2 text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>
              ({nameTranslations[nameIdx].lang})
            </span>
          </motion.div>

          <motion.p
            variants={itemVariants}
            className={`text-xl md:text-2xl mb-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'
              }`}
          >
            <motion.span
              animate={{ opacity: [1, 0.85, 1] }}
              transition={{ duration: 4, repeat: Infinity }}
            >
              ML Systems Engineer
            </motion.span>
          </motion.p>

          <motion.p
            variants={itemVariants}
            className={`text-lg md:text-xl mb-8 max-w-2xl mx-auto ${darkMode ? 'text-gray-400' : 'text-gray-500'
              }`}
          >
            "I design intelligent, scalable, and user-focused machine learning solutions that turn data into impactful digital experiences ‚Äî blending engineering precision with real-world application."
          </motion.p>

          <motion.div
            variants={itemVariants}
            className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-12"
          >
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={scrollToAbout}
              className="btn-primary"
            >
              View My Work
            </motion.button>
            <motion.a
              whileHover={{ scale: 1.05, rotate: [0, -1.5, 1.5, 0] }}
              whileTap={{ scale: 0.95 }}
              href="/Aditya_CV.pdf"
              target="_blank"
              rel="noopener noreferrer"
              className="btn-secondary inline-flex items-center gap-2"
            >
              üìÑ View CV
            </motion.a>

          </motion.div>

          {/* Social Links */}
          <motion.div
            variants={itemVariants}
            className="flex justify-center space-x-6"
          >
            <motion.a
              whileHover={{ scale: 1.2, rotate: 5 }}
              whileTap={{ scale: 0.9 }}
              href="https://github.com/adp-iitm"
              target="_blank"
              rel="noopener noreferrer"
              className={`p-3 rounded-full transition-colors duration-200 ${darkMode
                ? 'text-gray-400 hover:text-white hover:bg-dark-700'
                : 'text-gray-500 hover:text-gray-900 hover:bg-gray-100'
                }`}
            >
              <Github size={24} />
            </motion.a>
            <motion.a
              whileHover={{ scale: 1.2, rotate: -5 }}
              whileTap={{ scale: 0.9 }}
              href="https://www.linkedin.com/in/aditya-pareek-235280293?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app"
              target="_blank"
              rel="noopener noreferrer"
              className={`p-3 rounded-full transition-colors duration-200 ${darkMode
                ? 'text-gray-400 hover:text-white hover:bg-dark-700'
                : 'text-gray-500 hover:text-gray-900 hover:bg-gray-100'
                }`}
            >
              <Linkedin size={24} />
            </motion.a>
            <motion.a
              whileHover={{ scale: 1.2, rotate: 5 }}
              whileTap={{ scale: 0.9 }}
              href="mailto:adpaniitian@gmail.com"
              className={`p-3 rounded-full transition-colors duration-200 ${darkMode
                ? 'text-gray-400 hover:text-white hover:bg-dark-700'
                : 'text-gray-500 hover:text-gray-900 hover:bg-gray-100'
                }`}
            >
              <Mail size={24} />
            </motion.a>
          </motion.div>
        </motion.div>
      </div>

      {/* Scroll Indicator */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 1.5 }}
        className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
      >
        <motion.button
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 2, repeat: Infinity }}
          onClick={scrollToAbout}
          className={`p-2 rounded-full transition-colors duration-200 ${darkMode
            ? 'text-gray-400 hover:text-white hover:bg-dark-700'
            : 'text-gray-500 hover:text-gray-900 hover:bg-gray-100'
            }`}
        >
          <ChevronDown size={24} />
        </motion.button>
      </motion.div>
    </section>
  );
};

export default Hero;

